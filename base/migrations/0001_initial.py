# Generated by Django 5.2.4 on 2025-09-08 03:18

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('fee', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('temp', models.CharField(blank=True, max_length=100, null=True)),
                ('has_sep_temp', models.BooleanField(default=False)),
                ('require_file_uploads', models.BooleanField(default=False)),
                ('require_payment', models.BooleanField(default=False)),
                ('form_hidden_first', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(max_length=200)),
                ('current_residential_address', models.CharField(max_length=200)),
                ('state_of_origin', models.CharField(max_length=100)),
                ('lga_of_origin', models.CharField(max_length=100)),
                ('village_town_origin', models.CharField(max_length=100)),
                ('place_of_birth', models.CharField(max_length=100)),
                ('lga_place_of_birth', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_maiden_name', models.CharField(max_length=100)),
                ('birth_certificate', models.FileField(upload_to='documents/')),
                ('passport_data_page', models.FileField(upload_to='documents/')),
                ('passport_photo_identity', models.FileField(upload_to='documents/')),
                ('highest_education', models.CharField(max_length=100)),
                ('id_passport_num', models.CharField(max_length=100)),
                ('nin', models.CharField(max_length=100)),
                ('parent_nin', models.CharField(max_length=100)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(max_length=200)),
                ('initial_payment_required', models.BooleanField(default=False)),
                ('computed_service_fee', models.IntegerField(default=0)),
                ('finalized_service_fee', models.IntegerField(default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicecategory')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralRequestUploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='general_request_uploads/')),
                ('procurement_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_files', to='base.generalservicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='ProcurementServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(max_length=200)),
                ('current_residential_address', models.CharField(max_length=200)),
                ('state_of_origin', models.CharField(max_length=100)),
                ('lga_of_origin', models.CharField(max_length=100)),
                ('village_town_origin', models.CharField(max_length=100)),
                ('place_of_birth', models.CharField(max_length=100)),
                ('lga_place_of_birth', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_maiden_name', models.CharField(max_length=100)),
                ('highest_education', models.CharField(max_length=100)),
                ('id_passport_num', models.CharField(max_length=100)),
                ('nin', models.CharField(max_length=100)),
                ('parent_nin', models.CharField(max_length=100)),
                ('initial_payment_required', models.BooleanField(default=False)),
                ('computed_service_fee', models.IntegerField(default=0)),
                ('finalized_service_fee', models.IntegerField(default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicecategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProcureRequestUploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='procurement_request_uploads/')),
                ('procurement_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_files', to='base.procurementservicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicecategory')),
            ],
        ),
        migrations.AddField(
            model_name='procurementservicerequest',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicetype'),
        ),
        migrations.CreateModel(
            name='ProcurementDeathServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(max_length=200)),
                ('state_of_origin', models.CharField(max_length=100)),
                ('lga_of_origin', models.CharField(max_length=100)),
                ('village_town_origin', models.CharField(max_length=100)),
                ('place_of_birth', models.CharField(max_length=100)),
                ('lga_place_of_birth', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('date_of_death', models.DateField()),
                ('age_at_death', models.IntegerField()),
                ('place_of_death', models.CharField(max_length=100)),
                ('deceased_address', models.CharField(max_length=100)),
                ('name_of_declarant', models.CharField(max_length=100)),
                ('parent_nin', models.CharField(max_length=100)),
                ('death_certificate', models.FileField(upload_to='procure_death_request_files/')),
                ('initial_payment_required', models.BooleanField(default=False)),
                ('computed_service_fee', models.IntegerField(default=0)),
                ('finalized_service_fee', models.IntegerField(default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicecategory')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='PassportServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('postal_address', models.CharField(max_length=200)),
                ('current_residential_address', models.CharField(max_length=200)),
                ('state_of_origin', models.CharField(max_length=100)),
                ('lga_of_origin', models.CharField(max_length=100)),
                ('village_town_origin', models.CharField(max_length=100)),
                ('place_of_birth', models.CharField(max_length=100)),
                ('lga_place_of_birth', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_maiden_name', models.CharField(max_length=100)),
                ('birth_certificate', models.FileField(upload_to='passport_request_files/')),
                ('passport_data_page', models.FileField(upload_to='passport_request_files/')),
                ('certificate_of_state_of_origin', models.FileField(upload_to='passport_request_files/')),
                ('nin_slip', models.FileField(upload_to='passport_request_files/')),
                ('passport_size_photo', models.FileField(upload_to='passport_request_files/')),
                ('initial_payment_required', models.BooleanField(default=False)),
                ('computed_service_fee', models.IntegerField(default=0)),
                ('finalized_service_fee', models.IntegerField(default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicecategory')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicetype')),
            ],
        ),
        migrations.AddField(
            model_name='generalservicerequest',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.servicetype'),
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_files', to='base.userapplication')),
            ],
        ),
    ]
